# GuardAnt Worker Multi-Architecture Docker Image
FROM oven/bun:1-alpine

# Install required tools
RUN apk add --no-cache \
    curl \
    wget \
    bash \
    tini \
    nodejs

# Create app directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies  
RUN bun install

# Copy source and dist files
COPY src/ ./src/
COPY dist/ ./dist/

# Build the workers
RUN bun build ./src/auto-geographic-worker.ts --target bun --outfile ./dist/auto-geographic-worker.js && \
    bun build ./src/rabbitmq-worker.ts --target bun --outfile ./dist/rabbitmq-worker.js || true

# Clean up
RUN rm -rf node_modules/.cache

# Set version as build argument
ARG WORKER_VERSION=v67

# Create non-root user
RUN addgroup -g 1001 -S worker && \
    adduser -u 1001 -S worker -G worker && \
    chown -R worker:worker /app

# Switch to non-root user  
USER worker

# Environment variables
ENV NODE_ENV=production \
    API_ENDPOINT="https://guardant.me" \
    WORKER_REGION="auto" \
    WORKER_VERSION=${WORKER_VERSION} \
    MAX_CONCURRENT="10" \
    LOG_LEVEL="info"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node -e "process.exit(0)" || exit 1

# Use tini as entrypoint
ENTRYPOINT ["/sbin/tini", "--"]

# Start the worker
CMD ["bun", "dist/auto-geographic-worker.js"]